//There is only one number type in JavaScript
//Three Symbolic Values +Infinity, -Infinity, and NaN(Not a number)
//--------------------------------------------------------------------------------------------

//Addition(+)
    //Two values can be added by using the + operator

//Exercise
    //We are going to complete a function that takes in two number parameters, 
    //and returns their sum when added together. Your function should create a 
    //variable and assign it to the result of adding the two input parameters 
    //together using the + operator, then return that variable. Below is an example 
    //of the code running, assuming that you will have completed the described function: getSum.


function getSum(num1, num2) {
  // create a result variable,
  var result;
  // assign it to num1 and num2 added together
  var result = (num1 + num2);
  // return the result variable
  return result;
}
var resultSum = getSum(4, 10);
console.log('should be 14:', resultSum);
//--------------------------------------------------------------------------------------------

//Subtraction (-)
    //You can subtract a number from another number by using the - operator

//Exercise
    //We are going to complete a function that takes in two number parameters (num1, num2), 
    //and returns their difference when num2 is subtracted from num1. Your function should 
    //create a variable and assign it to the result of subtracting num2 from num1 using the 
    //- operator, then return that variable. Below is an example of the code running, assuming 
    //that you will have completed the described function: getDifference.

function getDifference(num1, num2) {
  // create a result variable,
  var result;
  // assign it to num1 minus num2
  var result = (num1 - num2);
  // return the result variable
  return result;
}
var resultDiff = getDifference(37, 19);
console.log('should be 18:', resultDiff);
//--------------------------------------------------------------------------------------------

//Multiplication (*)
    //One number can be multiplied by another number using the * operator

//Exercise
    //We are going to complete a function that takes in two parameters, and returns their product
    //when multiplied together. Your function should create a variable and assign it to the result
    //of multiplying the number parameters togetherusing the * operator, then return that variable
    //Below is an example of the code running, assuming that you will have completed the described
    //function: getProduct

function getProduct(num1, num2) {
  // create a result variable,
  var result;
  // assign it to num1 times num2
  var result = (num1 * num2);
  // return the result variable
  return result;
}

var resultProduct = getProduct(9, 4);
console.log('should be 36:', resultProduct);
//--------------------------------------------------------------------------------------------

//Division (/)
    //You can divide one number by another number by using the / operator

//Exercise
    //We are going to complete a function that takes in two number parameters (num1, num2), and 
    //returns the result of num1 divided by num2. Your function should create a variable and assign
    //it to the result of dividing num1 by num2 using the / operator, then return that variable
    //Below is an example of the code running, assuming that you will have completed the described
    //function: getQuotient

function getQuotient(num1, num2) {
  // create a result variable,
  var result;
  // assign it to num1 divided by num2
  var result = (num1 / num2);
  // return the result variable
  return result;
}
var resultQuotient = getQuotient(20, 4);
console.log('should be 5:', resultQuotient);
//--------------------------------------------------------------------------------------------

//Exponent (**)
    //If you want to raise one number to the power of another number use ** operator

//Exercise
    //We are going to complete a function that takes in two number parameters (num1,num2),
    //and returns the result of raising num1 to the num2 power. Your function should create
    //a variable and assign it to the result of raising num1 to the num2 power using the **
    //operator, then return that variable. Below is an example of the code running, assuming
    //that you will have completed the described function: getPower.

function getPower(num1, num2) {
  // create a result variable,
  var result;
  // assign it to num1 raised to the num2 power
  var result = (num1 ** num2);
  // return the result variable
  return result 
}

var resultPower = getPower(3, 4);
console.log('should be 81:', resultPower);
//--------------------------------------------------------------------------------------------

//Modulo (%)
    //If you want the remainder after dividing one number by another number use the % operator

//Exercise 
    //We are going to complete a function that takes in two number parameters (num1, num2),
    //and returns the remainder after dividing num1 by num2. Your function should create a
    //variable and assign it to the remainder after dividing num1 by num2 using the % operator,
    //then return that variable. Below is an example of the code running, assuming that you will
    //have completed the described function: getRemainder.

function getRemainder(num1, num2) {
  // create a result variable,
  var result;
  // assign it to remainder after dividing num1 by num2
  var result = (num1 % num2);
  // return the result variable
  return result;
}
var resultRemainder = getRemainder(21, 6);
console.log('should be 3:', resultRemainder);
//--------------------------------------------------------------------------------------------
//--------------------------------------------------------------------------------------------
//--------------------------------------------------------------------------------------------
//--------------------------------------------------------------------------------------------
